?t.test
1-(0.05/2)
mean(rnorm(100))
mean(rnorm(100))
sd(rnorm(100))
sd(rnorm(100))
round(sd(rnorm(100)))
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/twosamplettestt.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/twosamplettestt.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/twosamplettestt.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/twosamplettestt.r')
twosample.normal.iid(10)
twosample.normal.iid(10)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/twosamplettestt.r')
twosample.normal.iid(10)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/twosamplettestt.r')
twosample.normal.iid(10)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/twosamplettestt.r')
twosample.normal.iid(10)
debugSource('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/twosamplettestt.r')
View(mat)
debugSource('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/twosamplettestt.r')
View(mat)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/twosamplettestt.r')
twosample.normal.iid(10)
mat[1]
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/twosamplettestt.r')
twosample.normal.iid(10)
twosample.normal.iid(10)[,1]
length(twosample.normal.iid(10))
nrow(twosample.normal.iid(10))
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/twosamplettestt.r')
mat<-twosample.normal.iid(10)
degreesoffreedom(mat)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/twosamplettestt.r')
power.t.test()
?pwr
?power.t.test
0.02-1E-10
0.0000000000000000000000000002-1E-10
0.00000000000000000002-1E-10
0.0000002-1E-10
0.0000002
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
monte.carlo.p.value(mat)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
monte.carlo.p.value(mat)
mat
rm(list=ls())
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulation.r')
save.image("C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/project1.Rproj.RData")
generate.data(15,15)
data<-generate.data(15,15)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
monte.carlo.p.value(data)
generate.data(100,10)
data<-generate.data(100,10)
monte.carlo.p.value(data)
data<-generate.data(100,10,mu2=100)
monte.carlo.p.value(data)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/mc.r')
mc(data)
data<-generate.data(100,10,mu1=10,mu2=100)
mc(data)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
data<-generate.data(100,10,mu1=10,mu2=100)
monte.carlo.p.value(data)
debugSource('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
data
diff.estimate.mean[1000]
values[values<1]
values=1
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
data
monte.carlo.p.value(data)
monte.carlo.p.value(data)
monte.carlo.p.value(data)
monte.carlo.p.value(data)
data<-generate.data(100,10,mu1=100,mu2=100)
data<-generate.data(100,10,mu1=100)
monte.carlo.p.value(data)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
data<-generate.data(100,10,mu2=100)
monte.carlo.p.value(data)
monte.carlo.p.value(data)
data<-generate.data(100,100,mu2=100)
monte.carlo.p.value(data)
data<-generate.data(10000,100,mu2=100)
monte.carlo.p.value(data)
debugSource('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
diff.estimate.mean
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
monte.carlo.p.value(data)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
monte.carlo.p.value(data)
generate.data(10,10)
monte.carlo.p.value(data)
data<-generate.data(10,10)
monte.carlo.p.value(data)
data<-generate.data(10,10000)
monte.carlo.p.value(data)
data<-generate.data(10,1000)
monte.carlo.p.value(data)
data<-generate.data(10000,10000,mu2=10)
monte.carlo.p.value(data)
data<-generate.data(10000,10000,mu2=1)
monte.carlo.p.value(data)
data<-generate.data(10000,10000,mu2=0.05)
monte.carlo.p.value(data)
data<-generate.data(10000,10000,mu2=0.5)
monte.carlo.p.value(data)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
monte.carlo.p.value(data)
data<-generate.data(10000,10000,mu2=0.1)
monte.carlo.p.value(data)
data<-generate.data(10000,10000,mu2=0.01)
monte.carlo.p.value(data)
data<-generate.data(10000,10000,mu1=0.5)
mc(data)
data<-generate.data(10000,10000,mu1=0.005)
mc(data)
mc(data)
mc(data)
data<-generate.data(10000,10000,mu1=0.05)
mc(data)
data<-generate.data(10000,10000,mu1=0.06)
mc(data)
calculate.t.pvalue(data)
calculate.mw.pvalue(data)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
data<-generate.data(10000,10000,mu1=0.06)
monte.carlo.p.value(data)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
monte.carlo.p.value(data)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
monte.carlo.p.value(data)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
data<-generate.data(100,100,mu2=10)
calculate.t.pvalue(data)
calculate.mw.pvalue(data)
monte.carlo.p.value(data)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
monte.carlo.p.value(data)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
monte.carlo.p.value(data)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
monte.carlo.p.value(data)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Montecarlosimulation.r')
monte.carlo.p.value(data)
rm(list=ls())
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulation.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulation.r')
generate.data(100,100,mu2=0.1)
calculate.t.pvalue(data)
data<-generate.data(100,100,mu2=0.1)
calculate.t.pvalue(data)
?t.test
data<-generate.data(100,100)
calculate.t.pvalue(data)
data<-generate.data(100,100,mu2=0.01)
calculate.t.pvalue(data)
data<-generate.data(100,100,mu2=0.01)
calculate.t.pvalue(data)
calculate.t.pvalue(data)
calculate.t.pvalue(data)
calculate.t.pvalue(data)
calculate.t.pvalue(data)
data<-generate.data(100,100,mu2=0.01)
calculate.t.pvalue(data)
data<-generate.data(100,100,mu2=0.01)
calculate.t.pvalue(data)
calculate.monte.carlo.p.value(data)
calculate.mw.pvalue()
calculate.mw.pvalue(data)
rm(list=ls())
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulation.r')
generate.data(100,100)
data<-generate.data(100,100)
calculate.monte.carlo.p.value()
calculate.monte.carlo.p.value(data)
calculate.t.pvalue(data)
calculate.mw.pvalue(data)
Calculate.pvalue(data,3)
Calculate.pvalue(data,1)
Calculate.pvalue(data,test=1)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulation.r')
Calculate.pvalue(data,1)
calculate.t.pvalue(data)
debugSource('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulation.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/increasen.r')
sizeinceasen<-increasenandm.size(100,10000,by=100,nsim = 1000)
rm(list=ls())
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulation.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulationdriver.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/increasen.r')
sizeinceasen<-increasenandm.size(100,10000,by=100,nsim = 1000)
sizeinceasen<-increasenandm.size(100,10000,by=100,nsim = 100)
plot(sizeinceasen)
abline(sizeinceasen)
plot(sizeinceasen,type = "l")
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/increasen.r')
increasenandm.size(100,10000,by=100,nsim = 100)
increasenandm.size(100,10000,by=100,nsim = 100,myseed = 10)
increasenandm.size<-increasenandm.size(100,10000,by=100,nsim = 100,myseed = 10)
increasenandm.size
plot(increasenandm.size[[1]],increasenandm.size[[2]],type="l")
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/increasen.r')
increasenandm.size<-increasenandm.size(100,10000,by=100,nsim = 100,myseed = 10,test=2)
plot(increasenandm.size[[1]],increasenandm.size[[2]],type="l")
increasenandm.size
calcualte.size.power.fornsimulations(100,10,10,test=2)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/increasen.r')
increasenandm.size.mw<-increasenandm.size(100,10000,by=100,nsim = 100,myseed = 11,test=2)
increasenandm.size.mw<-increasenandm.size(100,1000,by=100,nsim = 100,myseed = 11,test=2)
plot(increasenandm.size.mw)
plot(increasenandm.size.mw[[1]],increasenandm.size.mw[[2]],type = "l")
increasenandm.size.mw<-increasenandm.size(100,10000,by=100,nsim = 1000,myseed = 11,test=2)
increasenandm.size.mw<-increasenandm.size(100,10000,by=100,nsim = 500,myseed = 12,test=3)
plot(increasenandm.size[[1]],increasenandm.size[[2]],type="l")
increasenandm.size.t<-increasenandm.size(100,10000,by=100,nsim = 100,myseed = 10)
increasenandm.size.t<-increasenandm.size(100,10000,by=100,nsim = 100,myseed = 10,test=1)
plot(increasenandm.size.t[[1]],increasenandm.size.t[[2]],type="l",xlab = "sample size","ylab"="size")
plot(increasenandm.size.t[[1]],increasenandm.size.t[[2]],type="l",xlab = "sample size","ylab"="size",main = "Size of t-test with increasing n")
increasenandm.size.t<-increasenandm.size(100,10000,by=100,nsim = 500,myseed = 10)
increasenandm.size.t<-increasenandm.size(100,10000,by=100,nsim = 500,myseed = 10,test=1)
plot(increasenandm.size.t[[1]],increasenandm.size.t[[2]],type="l",xlab = "sample size","ylab"="size",main = "Size of t-test with increasing n per 500 simulations")
lm(increasenandm.size.t[[1]]~increasenandm.size.t)
lm(increasenandm.size.t[[1]]~increasenandm.size.t[[2]])
summary(lm(increasenandm.size.t[[1]]~increasenandm.size.t[[2]]))
abline(lm(increasenandm.size.t[[1]]~increasenandm.size.t[[2]]))
abline(lm(increasenandm.size.t[[2]]~increasenandm.size.t[[1]]))
plot(increasenandm.size.t[[1]],increasenandm.size.t[[2]],type="l",xlab = "sample size","ylab"="size",main = "Size of t-test with increasing n per 500 simulations")
abline(lm(increasenandm.size.t[[2]]~increasenandm.size.t[[1]]))
increasenandm.size.mc<-increasenandm.size(100,10000,by=100,nsim = 500,myseed = 10,test=3)
plot(increasenandm.size.mc[[1]],increasenandm.size.mc[[2]],type="l",xlab = "sample size","ylab"="size",main = "Size of monte-carlo with increasing n per 500 simulations")
abline(lm(increasenandm.size.mc[[2]]~increasenandm.size.mc[[1]]))
lm(increasenandm.size.mc[[2]]~increasenandm.size.mc[[1]])
increasenandm.size.mc<-increasenandm.size(100,10000,by=100,nsim = 500,myseed = 11,test=3)
plot(increasenandm.size.mc[[1]],increasenandm.size.mc[[2]],type="l",xlab = "sample size","ylab"="size",main = "Size of monte-carlo with increasing n per 500 simulations")
abline(lm(increasenandm.size.mc[[2]]~increasenandm.size.mc[[1]]))
par(mfrow=c(1,2))
par(mforw=c(1,1))
par(mfrow=c(1,1))
increasenandm.size.mc<-increasenandm.size(100,10000,by=100,nsim = 500,myseed = 11,test=3)
plot(increasenandm.size.mc[[1]],increasenandm.size.mc[[2]],type="l",xlab = "sample size","ylab"="size",main = "Size of monte-carlo with increasing n per 500 simulations")
abline(lm(increasenandm.size.mc[[2]]~increasenandm.size.mc[[1]]))
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/twosamplettestt.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/increasenpower.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/increasenpower.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulationdriver.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulation.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulationdriver.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulationdriver.r')
calcualte.size.power.fornsimulations(2000,100,100,mu=100,mu2=150)
calcualte.size.power.fornsimulations(2000,100,100,mu=50,mu2=100)
debugSource('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/debug.r')
calcualte.size.power.fornsimulations(2000,100,100,mu2=0.1)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulationdriver.r')
calcualte.size.power.fornsimulations(2000,100,100,mu2=0.1)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulationdriver.r')
calcualte.size.power.fornsimulations(2000,100,100,mu2=0.1)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulationdriver.r')
calcualte.size.power.fornsimulations(2000,100,100,mu2=0.1)
debugSource('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulationdriver.r')
debugSource('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulationdriver.r')
debugSource('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulationdriver.r')
mat[[1]]
mat[[2]]
Q
1-0.095
?t.test
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulation.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulation.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulationdriver.r')
calcualte.size.power.fornsimulations(2000,100,100,mu2=0.1)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulation.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulationdriver.r')
calcualte.size.power.fornsimulations(2000,100,100,mu2=0.1)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulationdriver.r')
calcualte.size.power.fornsimulations(2000,100,100,mu2=0.1)
debugSource('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulationdriver.r')
mat[[1]]
mat[[2]]
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/increasenpower.r')
increasenandm.power(100,nfinal = 10000,by=1000,nsim = 500,myseed = 10)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/Simulationdriver.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/increasenpower.r')
increasenandm.power(100,nfinal = 10000,by=1000,nsim = 500,myseed = 10)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/increasenpower.r')
increasenandm.power(100,nfinal = 10000,by=1000,nsim = 500,myseed = 10)
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/increasenpower.r')
increasenandm.power(100,nfinal = 10000,by=1000,nsim = 500,myseed = 10)
increasenandm.power(100,nfinal = 10000,by=1000,nsim = 500,myseed = 10,test=2)
increasenandm.power(100,nfinal = 10000,by=1000,nsim = 100,myseed = 10,test=2)
calcualte.size.power.fornsimulations(100,100,100,test=2,mu2=0.1)
calcualte.size.power.fornsimulations(100,100,nsim = 100,test=2,mu2=0.1)
calcualte.size.power.fornsimulations(100,100,nsim = 500,test=2,mu2=0.1)
calcualte.size.power.fornsimulations(100,100,nsim = 1000,test=2,mu2=0.1)
increasenandm.power(100,nfinal = 10000,by=1000,nsim = 100,myseed = 11,test=2)
calcualte.size.power.fornsimulations(2000,100,100,mu2=0.1,test=2)
increasenandm.power.t<-increasenandm.power(100,10000,by=100,nsim = 500,myseed = 10,test=1)
plot(increasenandm.power.t[[1]],increasenandm.power.t[[2]],type="l",xlab = "sample size","ylab"="power",main = "power of t-test with increasing n")
#chec if there is a linear relationship
increasenandm.power.mw<-increasenandm.power(100,10000,by=100,nsim = 500,myseed = 10,test=2)
increasenandm.power.mw<-increasenandm.power(100,10000,by=100,nsim = 100,myseed = 10,test=2)
increasenandm.power.mw<-increasenandm.power(100,10000,by=1000,nsim = 100,myseed = 10,test=2)
plot(increasenandm.power.mw[[1]],increasenandm.power.mw[[2]],type="l",xlab = "sample size","ylab"="power",main = "power of mann-whitney with increasing n")
increasenandm.power.mc<-increasenandm.power(100,10000,by=1000,nsim = 100,myseed = 10,test=3)
plot(increasenandm.power.mc[[1]],increasenandm.power.mc[[2]],type="l",xlab = "sample size","ylab"="power",main = "power of monte carlo with increasing n")
increasenandm.power.mw<-increasenandm.power(100,10000,by=1000,nsim = 100,myseed = 10,test=2)
increasenandm.power.mc<-increasenandm.power(100,10000,by=1000,nsim = 100,myseed = 10,test=3)
calcualte.size.power.fornsimulations(1000,1000,1000,test=3,mu2=0.01)
calcualte.size.power.fornsimulations(1000,1000,1000,test=3,mu2=0.1)
calcualte.size.power.fornsimulations(1000,1000,1000,test=3,mu2=10)
data<-generate.data(1000,1000,mu2=0.01)
calculate.monte.carlo.p.value(data)
plot(increasenandm.power.mc[[1]],increasenandm.power.mc[[2]],type="l",xlab = "sample size","ylab"="power",main = "power of monte carlo with increasing n")
calcualte.size.power.fornsimulations(1000,100,100,mu2=100)
calcualte.size.power.fornsimulations(1000,100,100,mu1=100)
rm(list=ls())
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/project1.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/project1.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/project1.r')
source('C:/Users/robin/Desktop/St andrews Applied stats/Statistical Computing Modul/Assignments/Project1/project1/project1.r')
source('C:/Users/robin/Downloads/160025271-Project_1/project1.r')
rm(list=ls())
source('C:/Users/robin/Downloads/160025271-Project_1/project1.r')
rm(list=ls())
source('C:/Users/robin/Downloads/160025271-Project_1/project1.r')
